@page "/Search"

<PageTitle>MDR Search</PageTitle>

<TopBarSearch onFiltersBarVisibilityChanged="ChangeFiltersBarVisibility"
              onOptionsBarVisibilityChanged="ChangeOptionsBarVisibility" />


<div id="body-outer">
    <div id="body-main">

        @if (filtersBarShowing)
        {
            <div id="left-bar">
                <div id="filters-container">

                    <FluentDesignSystemProvider FillColor="#ecedee">
                        <FluentAccordion>
                            <FluentAccordionItem Heading="By Type" Style="font-size: 1rem; color: var(--txt-emph-colour)">
                                <CheckGroupType OnFeedbackChange="updateTypeFBack" OnSQLChange="updateTypeSQL" />
                            </FluentAccordionItem>
                            <FluentAccordionItem Heading="By Status" Style="font-size: 1rem; color: var(--txt-emph-colour)">
                                <CheckGroupStatus OnFeedbackChange="updateStatusFBack" OnSQLChange="updateStatusSQL" />
                            </FluentAccordionItem>

                            <FluentAccordionItem Heading="By Start Year" Style="font-size: 1rem; color: var(--txt-emph-colour)">
                                <div class="vert-splitter">
                                    <div id="yearLHS">
                                        <div class="yearlabel">
                                            <p class="complabel small-text-blue">Comparator</p>
                                         </div>
                                        <FluentRadioGroup aria-labelledby="compLabel" @bind-Value=compOption
                                            Name="compOptions" Orientation="Orientation.Vertical">
                                            <FluentRadio Value="@("none")">none</FluentRadio>
                                            <FluentRadio Value="@("eq")">=</FluentRadio>
                                            <FluentRadio Value="@("gt")">></FluentRadio>
                                            <FluentRadio Value="@("lt")">&lt;</FluentRadio>
                                            <FluentRadio Value="@("bw")">between</FluentRadio>
                                        </FluentRadioGroup>
                                    </div>
                                    <div id="yearRHS" >

                                        @if (@compOption != "none")
                                        {
                                            <div class="yearlabel">
                                                <p class="small-text-blue">Year</p>
                                            </div>

                                            <div id="year1-input">
                                                <input type="text" @bind="@year1value" @bind:event="oninput" style="width: 80px;" />
                                            </div>

                                            @if (@compOption == "bw")
                                            {
                                                <div class="yearlabel">
                                                    <p class="small-text-blue"> and </p>
                                                </div>
                                                <div id="year2-input">
                                                    <input type="text" @bind="@year2value" @bind:event="oninput" style="width: 80px;" />
                                                </div>
                                            }

                                            <div class="yearlabel">
                                               <p class="small-text-blue-italic"> Please enter year(s) as 4 digits</p>
                                            </div>
                                        }

                                    </div>
                                </div>

                            </FluentAccordionItem>

                            <FluentAccordionItem Heading="By Location" Style="font-size: 1rem; color: var(--txt-emph-colour)">
                                <div id="countries">
                                    <div id="countries-top">
                                        <button id="select-countries" class="filter-btn small-button-text taller-button" 
                                                @onclick="() => SetCountrySelectorVisibility(true)">
                                                Select Country(ies)...
                                         </button>
                                    </div>
                                    @if (@CountrySelectorVisible)
                                    {
                                        <div id="new-country-cb" class="country-cb">
                                            <SCComboBox idOptions="countryOptions"
                                                HandleSelectedOptionChanged="currentCountryChanged"></SCComboBox>
                                        </div>
                                        <div id="country-buttons">
                                            <button id="add-selected" class="filter-btn small-button-text taller-button"
                                                    @onclick="() => AddCurrentCountry()">
                                                Add Selected
                                            </button>
                                            <button id="cancel-add" class="filter-btn small-button-text taller-button"
                                                    @onclick="() => SetCountrySelectorVisibility(false)">
                                                Cancel
                                            </button>
                                        </div>

                                    }
                                    <div id="location-header">
                                        <div id="loc-header-text">
                                            <p class="small-text">Selected so far:</p>
                                        </div>
                                    </div>
                                    @if (Countries?.Any() == true)
                                    {
                                        @foreach (Country c in Countries)
                                        {
                                           <div class="selected-location">
                                                <div class="selected-location-name">
                                                   <p class="small-text">@c.name</p>
                                               </div>
                                                <div class="selected-location-remove">
                                                    <Tooltip Text="Remove" Position="top">
                                                        <button class="filter-btn" @onclick="() => RemoveCountry(c)">
                                                            <img height="14" width="14"
                                                            src="/icons/remove-icon.svg"
                                                            alt="remove location icon" />
                                                        </button>
                                                    </Tooltip>
                                               </div>
                                           </div>
                                        }
                                    }
                                </div>
                            </FluentAccordionItem>
                            <FluentAccordionItem Heading="By Linked Object" Style="font-size: 1rem; color: var(--txt-emph-colour)">
                                <CheckGroupObject OnFeedbackChange="updateObjectFBack" OnSQLChange="updateObjectSQL" />
                            </FluentAccordionItem>
                        </FluentAccordion>
                    </FluentDesignSystemProvider>

                    <div class="filter-expln">
                        <p class="small-text">
                            <b>N.B.</b>The two filters below only apply to interventional studies (= clinical trials).<br/>
                            If included in a query the results will be drawn <i>only</i> from interventional studies.
                        </p>
                    </div>

                    <FluentDesignSystemProvider FillColor="#ecedee">
                        <FluentAccordion>
                            <FluentAccordionItem Heading="By Phase" Style="font-size: 1rem; color: var(--txt-emph-colour)">
                                <CheckGroupPhase OnFeedbackChange="updatePhaseFBack" OnSQLChange="updatePhaseSQL" />
                            </FluentAccordionItem>
                            <FluentAccordionItem Heading="By Allocation" Style="font-size: 1rem; color: var(--txt-emph-colour)">
                                <CheckGroupAlloc OnFeedbackChange="updateAllocFBack" OnSQLChange="updateAllocSQL"/>
                            </FluentAccordionItem>
                        </FluentAccordion>
                    </FluentDesignSystemProvider>
                </div>
            </div>
        }

        <div id="middle-bar">

            <div id="search-bar">
                <div id="search-type">
                    <div class="search-label-container">
                        <p class="search-label normal-blue-text">Search Type</p>
                    </div>
                    <div id="search-type-combo">
                        <SCComboBox idOptions="searchOptions" 
                         HandleSelectedOptionChanged="SearchOptionChanged"></SCComboBox>
                    </div>
                </div>

                @if (searchType == 2)
                {
                    <div id="search-subtype">
                        <div class="search-label-container">
                            <p class="search-label normal-blue-text">ID Type</p>
                        </div>
                        <div id="id-type-combo">
                            <SCComboBox idOptions="idOptions"
                              HandleSelectedOptionChanged="idOptionChanged"></SCComboBox>
                        </div>
                    </div>
                }

                <div id="search-params">
                     <div class="search-label-container">
                        <p class="search-label normal-blue-text">@paramsLabelText</p>
                    </div>
                    <div id="params-text">
                        <input type="text" @bind="@searchParamsValue" @bind:event="oninput" style="width: 100%;" />
                    </div>
                </div>
            </div>

            @if (showWhereClause)
            {
                <div id="sql-area">
                    <div id="sql-container">
                        <p class="small-text-italic">
                            Selected Search Value: @searchType: @searchText,
                            Selected id type: @idType : @idText <br/>
                            Search Parameters: @searchParamsValue  <br />
                            Search Filters: @alloc_sql, @alloc_fback<br />
                        </p>
                    </div>
                </div>
            }

            <div id="result-area">

                <div id="results-heading">
                    <div id="results-found">
                        <p class="small-text no-wrap-text">4 Results found</p>
                    </div>
                    <div id="results-spacer">
                        
                    </div>
                    <div id="results-buttons">
                        <p class="small-text no-wrap-text">items per page cb --- Fst-Prv (1 of N) Nxt-Lst</p>
                    </div>
                </div>

                <div id="results-list" >
                    <FluentDesignSystemProvider FillColor="#ecedee">
                    <FluentAccordion >
                        <FluentAccordionItem Heading="study title 1" Style="font-size: 1rem;">
                            <div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                            </div> 
                         </FluentAccordionItem>
                         <FluentAccordionItem Heading="study title 2" Style="font-size: 1rem;">
                            <div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                            </div> 
                         </FluentAccordionItem>
                         <FluentAccordionItem Heading="study title 3" Style="font-size: 1rem;">
                            <div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                            </div>  
                         </FluentAccordionItem>
                         <FluentAccordionItem Heading="study title 4" Style="font-size: 1rem;">
                            <div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                                <div> place holder for details</div>
                            </div>  

                        </FluentAccordionItem>
                     </FluentAccordion>
                     </FluentDesignSystemProvider>
                </div>
            </div>

        </div>

        @if (optionsBarShowing)
        {
            <div id="right-bar">

                <div class="button-row" id="SearchButton" >
                    <button class="RHSbutton big-button-text" id="Search">Search</button>
                </div>
                <div class="RHSCheck" id="ShowWhere">
                     <div class="RHSCheckTextSection">
                        <p class="normal-blue-text">Show query details</p>
                     </div>
                     <div class="RHSCheckBoxSection">
                        <FluentCheckbox @bind-Value=showWhereClause></FluentCheckbox>
                     </div>
                </div>
                <div class="RHSCheck" id="SearchIn">
                    <div>
                        <p class="normal-blue-text">Search for key words in...</p>
                    </div>
                </div>
                <div class="RHSCheck">
                    <div class="RHSCheckTextSection">
                        <p class="normal-blue-text">Study Titles</p>
                    </div>
                    <div class="RHSCheckBoxSection">
                        <FluentCheckbox @bind-Value=searchInTitles></FluentCheckbox>
                    </div>
                </div>

                <div class="RHSCheck">
                    <div class="RHSCheckTextSection">
                        <p class="normal-blue-text">Study Topics</p>
                    </div>
                    <div class="RHSCheckBoxSection">
                        <FluentCheckbox @bind-Value=searchInTopics></FluentCheckbox>
                    </div>
                </div>

                <div class="RHSCheck">
                    <div class="RHSCheckTextSection">
                        <p class="normal-blue-text">Study Conditions</p>
                    </div>
                    <div class="RHSCheckBoxSection">
                        <FluentCheckbox @bind-Value=searchInConditions></FluentCheckbox>
                    </div>
               </div>

               <div class="RHSCheck" id="AggregateSearches">
                    <div class="RHSCheckTextSection">
                        <p class="normal-blue-text">Aggregate Searches</p>
                   </div>
                   <div class="RHSCheckBoxSection">
                        <FluentCheckbox @bind-Value=aggregateSearches></FluentCheckbox>
                   </div>
               </div>

               <div class="button-row">
                    <button class="RHSbutton big-button-text" id="ClearFilters">Clear Filters</button>
               </div>

               <div class="button-row">
                    <button class="RHSbutton big-button-text" id="ClearSearch">Clear Search</button>
               </div>

               <div class="button-row">
                    <button class="RHSbutton big-button-text" id="RemoveUnchecked">Remove Unchecked</button>
               </div>
            
            </div>
        }

     </div>
</div>

@code {
    string type_sql = "", type_fback = "";
    string status_sql = "", status_fback = "";
    string object_sql = "", object_fback = "";
    string phase_sql = "", phase_fback = "";
    string alloc_sql = "", alloc_fback = "";

    private void updateTypeFBack(string fback)
    {
        alloc_fback = fback; StateHasChanged();
    }

    private void updateTypeSQL(string sql)
    {
        alloc_sql = sql; StateHasChanged();
    }

    private void updateStatusFBack(string fback)
    {
        alloc_fback = fback; StateHasChanged();
    }

    private void updateStatusSQL(string sql)
    {
        alloc_sql = sql; StateHasChanged();
    }

    private void updateObjectFBack(string fback)
    {
        alloc_fback = fback; StateHasChanged();
    }

    private void updateObjectSQL(string sql)
    {
        alloc_sql = sql; StateHasChanged();
    }

    private void updatePhaseFBack(string fback)
    {
        alloc_fback = fback; StateHasChanged();
    }

    private void updatePhaseSQL(string sql)
    {
        alloc_sql = sql; StateHasChanged();
    }

   private void updateAllocFBack(string fback)
    {
        alloc_fback = fback; StateHasChanged();
    }

    private void updateAllocSQL(string sql)
    {
        alloc_sql = sql; StateHasChanged();
    }
        

    bool filtersBarShowing = true;
    bool optionsBarShowing = true;
    bool SearchPossible = false;

    bool showWhereClause = true;
    bool searchInTitles = true;
    bool searchInTopics = true;
    bool searchInConditions = true;
    bool aggregateSearches = false;

    string? compOption = "none";
    string? year1value;
    string? year2value;
    List<Country> Countries = default!;

    bool CountrySelectorVisible = false;

    private void ChangeFiltersBarVisibility(bool visibility)
    {
        filtersBarShowing = visibility;
    }

    private void ChangeOptionsBarVisibility(bool visibility)
    {
        optionsBarShowing = visibility;
    }

    private void SetCountrySelectorVisibility(bool value)
    {
        CountrySelectorVisible = value;
        if (value)
        {
            currentCountry = null;  // match the blank combo
        }
    }

    private Country? currentCountry;
    private void AddCurrentCountry()
    {
        if (currentCountry is not null)
        {
            // Do an 'already added' check

            bool to_add = true;
            foreach(Country c in Countries)
            {
                if (c.name == currentCountry.name)
                {
                    to_add = false;
                    break;
                }
            }

            if (!to_add)
            {
                string fb_message = $"But the country '{currentCountry.name}' has already been added!";

            }
            else
            {
                Countries.Add(currentCountry);
            }
        }
    }

    private void currentCountryChanged(Option<string> s)
    {
        if (s is not null && Int32.TryParse(s.Value, out int id))
        {
            currentCountry = new Country(id, s.Text!);
        }
    }

    private void RemoveCountry(Country currentCountry)
    {
        Countries.Remove(currentCountry);
    }

    string? searchText;
    int? searchType = 1;
    string? idText;
    int? idType = 1;
    string? searchParamsValue;
    string paramsLabelText = "Parameters";

    private void SearchOptionChanged(Option<string> s)
    {
        searchText = s?.Text ?? "None";
        searchType = Int32.Parse(s?.Value ?? "0");
        paramsLabelText = searchType switch
        {
            1 => "Words",
            2 => "Identifier",
            3 => "PubMed ID",
            _ => "Parameters"
        };
        RecalculateFeedback();
        SearchPossible = RecalculateSQL();
    }

    private void idOptionChanged(Option<string> s)
    {
        idText = s?.Text ?? "None";
        idType = Int32.Parse(s?.Value ?? "0");
        RecalculateFeedback();
        SearchPossible = RecalculateSQL();
    }

    private void RecalculateFeedback()
    {
        // Provide the text for the 'SQL area'

    }

    private bool RecalculateSQL()
    {
        // provide the where clause for a SQL query (though this may be modified 
        // at the server). Returns true or false dependent on whether query is possible.

        return false;  // for now
    }

    List<Option<string>> searchOptions = default!;
    List<Option<string>> idOptions = default!;
    List<Option<string>> countryOptions = default!;

    protected override void OnInitialized()
    {
        searchOptions = new()
        {
            { new Option<string> { Value = "1", Text = "Key word(s)", Selected = true } },
            { new Option<string> { Value = "2", Text = "Study identifier"} },
            { new Option<string> { Value = "3", Text = "Paper identifier (PMID)" } }
        };

        idOptions = new()
        {
            { new Option<string> { Value = "1", Text = "Trial registry ID", Selected = true } },
            { new Option<string> { Value = "2", Text = "Funder’s ID"} },
            { new Option<string> { Value = "3", Text = "Sponsor’s ID" } },
            { new Option<string> { Value = "4", Text = "NIH CTRP ID"} },
            { new Option<string> { Value = "5", Text = "NHBL ID" } }
        };

        countryOptions = new()
        {
            { new Option<string> { Value = "1", Text = "France" } },
            { new Option<string> { Value = "2", Text = "Germany"} },
            { new Option<string> { Value = "3", Text = "United Kingdom" } },
            { new Option<string> { Value = "4", Text = "United States"} },
            { new Option<string> { Value = "5", Text = "Spain" } },
            { new Option<string> { Value = "1", Text = "Portugal" } },
            { new Option<string> { Value = "2", Text = "Italy"} },
            { new Option<string> { Value = "3", Text = "Belgium" } },
            { new Option<string> { Value = "4", Text = "Netherlands"} },
            { new Option<string> { Value = "5", Text = "Canada" } }
        };

        Countries = new();
    }

}
