<h4>@type_name</h4>

<div class="card-line">
    <span class="card-label">Display title:&nbsp;</span><span class="card-text">@display_title</span>
</div>
<div class="card-line">
    <span class="card-label">Managing organisation:&nbsp;</span><span class="card-text">@((MarkupString)@managing_org)</span>
</div>

<div class="card-line card-spaced">
    <div class="fixed-label">
        <span class="card-label">Year Published:&nbsp;</span><span class="card-text">@year_pub</span>
    </div>

    @if (@version != "")
    {
        <div class="fixed-label">
             <span class="card-label">Version:&nbsp;</span><span class="card-text">@version</span>
        </div>
    }

    @if (@doi != "")
    {
        <div class="card-text">
            <span class="card-label">doi:&nbsp;</span><span class="card-text">@doi</span>
        </div>
    }
</div>
<p></p>
<div class="card-line">
    <span class="card-label">Access Type:&nbsp;</span><span class="card-text">@access_type</span>
</div>

@if(@instance_number> 0)
{
    @foreach (instance_line il in instance_strings)
    {
        <div class="card-line card-spaced">
            <div class="fixed-label">
                <span class="card-label">Resource:&nbsp;</span><span class="card-text">@il.resource</span>
            </div>
            <div class="fixed-label">
                <span class="card-label">Found at:&nbsp;</span><span class="card-text">@il.source_system</span>
            </div>
            <div class="card-text">
                <span class="card-label">URL:&nbsp;</span><span class="card-text"><a href=@il.res_url target="_blank">@il.res_url</a></span>
            </div>
            @if (@il.res_details != "")
            {
                <div class="card-text">
                    <span class="card-label">Details:&nbsp;</span><span class="card-text">@il.res_details</span>
                </div>
            }
        </div>
    }
}
else
{
    <div class="card-line">
        <span class="card-label">Access details:&nbsp;</span><span class="card-text">@access_description</span>
    </div>
    <div class="card-line">
        <span class="card-label">Further information at:&nbsp;</span><span class="card-text"><a href=@url target="_blank">@url</a></span>
    </div>
}


@if (@author_number > 0)
{
    <p class="sub-heading">Author(s)</p>
    @foreach (detail_line dl in @author_strings)
    {
    <div class="indented-line card-line">
            <div class="fixed-long-label">
                @dl.line_header
            </div>
            <div class="card-text">
                @((MarkupString)@dl.line_details)
            </div>
        </div>
    }
}

@if (@contrib_number > 0)
{
    <p class="sub-heading">Contributors</p>
    @foreach (person_line pl in @person_strings)
    {
         <div class="indented-line card-spaced">
            <div class="fixed-long-label">
                <span class="card-label">@pl.contrib_type:&nbsp;</span><span class="card-text">@pl.person_name</span>
            </div>

            @if (@pl.affiliation != "")
            {
                <div class="card-text">
                    <span class="card-label">Affiliation:&nbsp;</span><span class="card-text">@((MarkupString)@pl.affiliation)</span>
                </div>
            }
        </div>
    }

    @foreach (detail_line dl in @org_strings)
    {
        <div class="indented-line">
            <span class="card-label">@dl.line_header:&nbsp;</span><span class="card-text">@((MarkupString)@dl.line_details)</span>
        </div>
    }
}

@if (@date_number > 0)
{
    <p class="sub-heading">Date(s)</p>
    @foreach (detail_line dl in @date_strings)
    {
        <div class="indented-line">
            <span class="card-label">@dl.line_header:&nbsp;</span><span class="card-text">@dl.line_details</span>
        </div>
    }
}

@if (@title_number > 0)
{
    <p class="sub-heading">Title(s)</p>
    @foreach (detail_line dl in @title_strings)
    {
        <div class="indented-line">
            <span class="card-label">@dl.line_header:&nbsp;</span><span class="card-text">@dl.line_details</span>
        </div>
    }
}

@if (topic_number > 0)
{
    <p class="sub-heading">Listed topics</p>
    foreach (string s in @topic_strings)
    {
        <div class="indented-line"><span class="card-text">@s</span></div>
    }
}

@if (@identifier_number > 0)
{
    <p class="sub-heading">Identifiers</p>
    @foreach (ident_line idl in @identifier_strings)
    {
        <div class="indented-line card-spaced">
            <div class="fixed-label">
                <span class="card-label">@idl.type_header:&nbsp;</span><span class="card-text">@idl.type_value</span>
            </div>
            <div class="card-text">
                <span class="card-label">Source:&nbsp;</span><span class="card-text">@((MarkupString)@idl.source_value)</span>
            </div>

            @if (@idl.date_value != "")
            {
                <div class="card-text">
                    <span class="card-label">Date:&nbsp;</span><span class="card-text">@idl.date_value</span>
                </div>
            }
        </div>
    }
}

<p class="sub-heading">Object Data Provenance</p>
<div class="card-line">
    <span class="card-text">@provenance</span>
</div>

<p></p>


@code {
    [Parameter]
    public JSONFullObject? ob { get; set; }

    string type_name = "";    
    string display_title = "";
    string version = "";
    string url = "";
    string doi = "";
    string managing_org = "";
    string year_pub = "";
    string provenance = "";
    string access_type = "";
    string access_description = "";

    Deidentification? deidentification;
    Consent? consent;
    record_keys? rec_keys;

    List<object_instance>? object_instances = new();
    List<instance_line> instance_strings = new();
    int instance_number = 0;

    List<object_date>? object_dates = new();
    List<detail_line> date_strings = new();
    int date_number = 0;

    List<object_title>? object_titles = new();
    List<detail_line> title_strings = new();
    int title_number = 0;

    List<object_person>? object_people = new();
    List<person_line> person_strings = new();
    List<detail_line> author_strings = new();
    int author_number = 0;

    List<object_organisation>? object_organisations = new();
    List<detail_line> org_strings = new();
    int contrib_number = 0;

    List<object_topic>? object_topics = new();
    List<string> topic_strings = new();
    int topic_number = 0;

    List<object_identifier>? object_identifiers = new();
    List<ident_line> identifier_strings = new();
    int identifier_number = 0;

    private class detail_line
    {
        public string line_header { get; set; }
        public string line_details { get; set; }

        public detail_line(string _line_header, string _line_details)
        {
            line_header = _line_header;
            line_details = _line_details;
        }
    }

    private class instance_line
    {
        public string? resource{ get; set; }
        public string? source_system { get; set; }
        public string? res_url { get; set; }
        public string? res_details { get; set; }

        public instance_line(string? _resource, string? _source_system,
                          string? _res_url, string? _res_details)
        {
            resource = _resource;
            source_system = _source_system;
            res_url = _res_url;
            res_details = _res_details;
        }
    }

    private class ident_line
    {
        public string? type_header { get; set; }
        public string? type_value { get; set; }
        public string? source_value { get; set; }
        public string? date_value { get; set; }

        public ident_line(string? _type_header, string? _type_value,
                          string? _source_value, string? _date_value)
        {
            type_header = _type_header;
            type_value = _type_value;
            source_value = _source_value;
            date_value = _date_value;
        }
    }

    private class person_line
    {
        public string? contrib_type { get; set; }
        public string? person_name { get; set; }
        public string affiliation { get; set; }


        public person_line(string? _contrib_type, string? _person_name,
                          string _affiliation)
        {
            contrib_type = _contrib_type;
            person_name = _person_name;
            affiliation = _affiliation;
        }
    }

    private string UpdateBbmriUrl(string? dataObjectUrl)
    {
        // Check if string is null
        if (string.IsNullOrWhiteSpace(dataObjectUrl))
        {
            return "";
        }
        
        // Define a new base URL for BBMRI source
        const string newBaseUrl = "https://directory.bbmri-eric.eu/ERIC/directory/";

        // Define and return if it is not a BBMRI URL
        if (!dataObjectUrl.StartsWith("https://directory.bbmri-eric.eu/ERIC/"))
        {
            return dataObjectUrl;
        }

        // Checks if it's already a new BBMRI URL
        if (dataObjectUrl.StartsWith(newBaseUrl))
        {
            // Return as it is
            return dataObjectUrl;
        }
        
        // Start updating the URL
        var uniqueIdentifier = dataObjectUrl.Substring(url.IndexOf('#')); // Get a part after '#'
        return newBaseUrl + uniqueIdentifier;
    }

    protected override void OnInitialized()
    {
        if (ob is not null)
        {
            type_name = ob.object_type?.name ?? "No type name !!";
            if (type_name.ToLower() == "journal article - unspecified")
            {
                type_name = "Journal Article";
            }
            display_title = ob.display_title ?? "No display title???";
            doi = ob.doi ?? "";
            year_pub = ob.publication_year.HasValue ? ((int)ob.publication_year).ToString() : "Not provided";

            managing_org = ob.managing_organisation?.name ?? "";
            if (!string.IsNullOrEmpty(ob.managing_organisation?.ror_id))
            {
                managing_org = "<a href=\"" + ob.managing_organisation?.ror_id + "\" target=\"_blank\">" + managing_org + "</a>";
            }

            access_type = ob.access_type?.name ?? "No access type provided!";
            url =  !string.IsNullOrWhiteSpace(ob.access_details?.url) ? UpdateBbmriUrl(ob.access_details?.url) : "";
            access_description = ob.access_details?.description ?? "";
            version = ob.version ?? "";

            deidentification = ob.dataset_deident_level;
            consent = ob.dataset_consent;
            rec_keys = ob.dataset_record_keys;

            provenance = ob.provenance_string ?? "No provenance string";

            object_instances = ob.object_instances;
            if (object_instances?.Any() == true)
            {
                instance_strings = new();
                foreach (object_instance bi in object_instances)
                {
                    instance_number++;
                    string resource = bi.resource_details?.type_name ?? "";
                    string source_system = bi.system?.name ?? "";
                    string res_url = !string.IsNullOrWhiteSpace(bi.access_details?.url) ? UpdateBbmriUrl(bi.access_details?.url) : "";

                    string res_details = "";
                    if (bi.resource_details?.size is not null)
                    {
                        res_details +=  bi.resource_details?.size.ToString();
                        res_details += string.IsNullOrEmpty(bi.resource_details?.size_unit)
                                        ? "" : " " + bi.resource_details.size_unit ;
                        res_details += string.IsNullOrEmpty(bi.resource_details?.comments)
                                        ? "" : "; " + bi.resource_details.comments;
                        res_details = "(" + res_details + ")";
                    }

                    instance_strings.Add(new instance_line(resource, source_system, res_url, res_details));
                }
            }


            object_dates = ob.object_dates;
            if (object_dates?.Any() == true)
            {
                date_strings = new();
                foreach (object_date bd in object_dates)
                {
                    date_number++;
                    string date_type = bd.date_type?.name ?? "";
                    string date_as_string = bd.date_as_string ?? "";
                    date_strings.Add(new detail_line(date_type, date_as_string));
                }
            }


            object_titles = ob.object_titles;
            if (object_titles?.Any() == true)
            {

                title_strings = new();
                foreach (object_title sp in object_titles)
                {   
                    title_number++;
                    string title_text = sp.title_text ?? "";
                    string title_type = sp.title_type?.name ?? "";
                    title_strings.Add(new detail_line(title_type, title_text));
                }
            }


            object_people = ob.object_people;
            if (object_people?.Any() == true)
            {
                person_strings = new();
                foreach (object_person sp in object_people)
                {
                    string pname = sp.person_full_name ?? "no name given";
                    if (!string.IsNullOrEmpty(sp.orcid_id))
                    {
                        pname += " [ORCID: " + sp.orcid_id + "]";
                    }
                    string affiliation = "";

                    if (!string.IsNullOrEmpty(sp.person_affiliation))
                    {
                        string affil_string = sp.person_affiliation;
                        if (sp.affiliation_org is not null)
                        {
                            bool RORpresent = string.IsNullOrEmpty(sp.affiliation_org.ror_id) ? false : true;
                            if (!string.IsNullOrEmpty(sp.affiliation_org.name))
                            {
                                if (sp.affiliation_org.name != affil_string)
                                {
                                    if (RORpresent)
                                    {
                                        affiliation = affil_string + "&nbsp;&nbsp;[Org: <a href =\"" + sp.affiliation_org.ror_id +
                                                                   "\" target=\"_blank\">" + sp.affiliation_org.name + "</a>]";
                                    }
                                    else
                                    {
                                        affiliation = affil_string + "&nbsp;&nbsp;[Org: " + sp.affiliation_org.name + "]";
                                    }
                                }
                                else
                                {
                                    if (RORpresent)
                                    {
                                        affiliation = "<a href=\"" + sp.affiliation_org.ror_id + "\" target=\"_blank\">" + affil_string + "</a>";
                                    }
                                    else
                                    {
                                        affiliation = affil_string; // org but no ror, but same as the affiliation
                                    }
                                }
                            }
                        }
                        else
                        {
                            affiliation = affil_string; // no org - just the affiliation string
                        }
                    }


                    string contribtype = sp.contrib_type?.name ?? "not given"; 
                    if (contribtype == "Creator / Author")
                    {
                        author_number++;
                        author_strings.Add(new detail_line(pname, affiliation));
                    }
                    else
                    {
                        contrib_number++;
                        person_strings.Add(new person_line(contribtype, pname, affiliation));
                    }

                        /*
                        * / Below provides too much information to easily display
                        string affiliation = "";
                            if (!string.IsNullOrEmpty(sp.person_affiliation))
                            {
                            affiliation = sp.person_affiliation;
                                if (sp.affiliation_org is not null)
                            {
                            bool org_details_started = false;
                                if (!string.IsNullOrEmpty(sp.affiliation_org.name)
                                && sp.affiliation_org.name != affiliation)
                                {
                            affiliation += "     [";
                            affiliation += "Org: " + sp.affiliation_org.name;
                            org_details_started = true;
                            }

                            if (!string.IsNullOrEmpty(sp.affiliation_org.ror_id))
                                {
                                affiliation += org_details_started ? ", " : "     [";
                                affiliation += "ROR Id: " + sp.affiliation_org.ror_id;
                                org_details_started = true;
                            }
                            affiliation += org_details_started ? "]" : "";
                }
                }
                */
                }
            }

            object_organisations = ob.object_organisations;
            if (object_organisations?.Any() == true)
            {
                org_strings = new();
                foreach (object_organisation so in object_organisations)
                {
                    contrib_number++;
                    string source_name = so.org_details?.name ?? "";
                    if (!string.IsNullOrEmpty(so.org_details?.ror_id))
                    {
                        source_name = "<a href=\"" + so.org_details?.ror_id + "\" target=\"_blank\">" + source_name + "</a>";
                    }
                    org_strings.Add(new detail_line(so.contrib_type?.name ?? "", source_name));
                }
            }

            object_topics = ob.object_topics;
            if (object_topics?.Any() == true)
            {

                topic_strings = new();
                foreach (object_topic st in object_topics)
                {
                    topic_number++;
                    string topic_string = "", mesh_string = "", ct_string = "";
                    string orig_value = st.original_value ?? "No topic name?";
                    if (st.ct_data is not null)
                    {
                        if (st.ct_data.ct_type_id != 14)
                        {
                            ct_string = (st.ct_data.ct_type ?? "") + ": " + (st.ct_data.ct_code ?? "");
                        }
                    }

                    if (st.mesh_data is not null)
                    {
                        string mesh_value = st.mesh_data.mesh_value ?? "";
                        mesh_string = "MeSH: " + (st.mesh_data.mesh_code ?? "");
                        mesh_string += mesh_value == orig_value ? "" : " - " + mesh_value;
                    }

                    topic_string = orig_value;
                    if (ct_string != "" || mesh_string != "")
                    {
                        topic_string += ", (";
                        if (ct_string != "")
                        {
                            topic_string += ct_string;
                        }
                        if (mesh_string != "")
                        {
                            topic_string += ct_string == "" ? mesh_string : ", " + mesh_string;
                        }
                        topic_string += ")";
                    }
                    topic_strings.Add(topic_string);
                }
            }

            object_identifiers = ob.object_identifiers;
            if (object_identifiers?.Any() == true)
            {
                identifier_strings = new();
                foreach (object_identifier si in object_identifiers)
                {
                    identifier_number++;
                    string source_name = si.source?.name ?? "";
                    if (source_name != "")
                    {
                        if (!string.IsNullOrEmpty(si.source?.ror_id))
                        {
                            source_name = "<a href=\"" + si.source?.ror_id + "\" target=\"_blank\">" + source_name + "</a>";
                        }
                        identifier_strings.Add(new ident_line(si.identifier_type?.name ?? "",
                                    si.identifier_value, source_name,
                                    (string.IsNullOrEmpty(si.identifier_date) ? "" : si.identifier_date)));
                    }
                }
            }
        }
    }
}