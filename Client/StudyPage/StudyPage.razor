@page "/Study/{studyId:int?}"
@inject HttpClient Http
@using System.Text.Json;


<PageTitle>@page_title</PageTitle>

<TopBar BarTitle="" ShowSearchLink=true />


<div id="body-outer">
    <div id="body-main">
       <div class="s-dets">
           <h2>For now, just basic details as on card to illustrate principle...</h2>
            <div class="card-line">
                <span class="card-label">Full Title:&nbsp;</span><span class="card-text">@study_name</span>
            </div>
            <div class="card-line">
                <span class="card-label">Description:&nbsp;&nbsp;</span>
                <span class="card-text">@description</span>
            </div>
    
            <div class="card-line">
                <span class="card-label">Data Sharing:&nbsp;</span><span class="card-text">@dss</span>
            </div>
            <div class="card-line card-spaced">
                <div class="fixed-label">
                    <span class="card-label">Start Date:&nbsp;</span><span class="card-text">@start_date</span>
                </div>
                <div class="fixed-label">
                    <span class="card-label">Type:&nbsp;</span><span class="card-text">@type_name</span>
                </div>
                <div class="card-text">
                    <span class="card-label">Status:&nbsp;</span><span class="card-text">@status_name</span>
                </div>
            </div>
            <div class="card-line card-spaced">
                <div class="fixed-label">
                    <span class="card-label">Gender Eligibility:&nbsp;</span><span class="card-text">@gender_elig</span>
                </div>
                <div class="fixed-label">
                    <span class="card-label">Min Age:&nbsp;</span><span class="card-text">@min_age</span>
                </div>
                <div class="card-text">
                    <span class="card-label">Max Age:&nbsp;</span><span class="card-text">@max_age</span>
                </div>
            </div>

            <!--
            <div class="card-line">
                <span class="card-label">Target Conditions:&nbsp;</span><span class="card-text">@condition_list</span>
            </div>
            <div  class="card-line">
                <span class="card-label">Design Features:&nbsp;</span><span class="card-text">@feature_list</span>
            </div>

            <div class="card-line">
                <div id="countries" class="card-text">
                    <span class="card-label">Country or Countries:&nbsp;</span><span class="card-text">@country_list</span>
                </div>
            </div>
            -->

            <Tooltip Text="@provenance" Position="left" Size="large">
                <div id="prov-icon" class="card-text">
                    <img height="16" width="16" src="/icons/provenance.svg" alt="resource icon" />
                </div>
            </Tooltip>

            @if (obs is not null)
            {
                @foreach (ObjectSummary @ob in obs)
                {
                    <p></p>
                    <FluentDivider />
                    <p></p>            
                    //<ObjectDets ob=@ob />
                }
            }
        </div>
    </div>
</div>


@code {
    [Parameter]
    public int? studyId { get; set; }

    string? JsonString { get; set; }
    string search_url_stem = "api/Study";
    int study_id;
    string study_name = default!;
    string page_title = default!;
    string description = default!;
    string dss = default!;
    string start_date = default!;
    string type_name = default!;
    string status_name = default!;
    string gender_elig = default!;
    string min_age = default!;
    string max_age = default!;
    string enrolment = default!;
    string provenance = default!;

    List<study_identifier>? study_identifiers;
    List<study_title>? study_titles;
    List<study_person>? study_people;
    List<study_organisation>? study_organisations;
    List<study_topic>? study_topics;
    List<study_feature>? study_features;
    List<study_condition>? study_conditions;
    List<study_icd>? study_icds;
    List<study_country>? study_countries;
    List<study_location>? study_locations;
    List<study_relationship>? study_relationships;

    List<ObjectSummary>? obs;

    private string get_month(int? start_month)
    {
        return start_month switch
        {
            1 => "January",
            2 => "February",
            3 => "March",
            4 => "April",
            5 => "May",
            6 => "June",
            7 => "July",
            8 => "August",
            9 => "September",
            10 => "October",
            11 => "November",
            12 => "December",
            _ => ""
        };
    }

    protected async override  Task OnInitializedAsync()
    {
        if (studyId.HasValue)
        {
            page_title = studyId.ToString() ?? "??";
            string url = $"{search_url_stem}/StudyDetails/{studyId}";
            var StudySet = await Http.GetStringAsync(url);

            if (StudySet is not null)
            {
                JSONFullStudy? s = JsonSerializer.Deserialize<JSONFullStudy?>(StudySet);

                if (s is not null)
                {
                    study_id = s.id;
                    study_name = s.display_title ?? "No study name provided - ????";
                    page_title = study_name.Length < 23 ? study_name : study_name[..20] + "...";

                    description = s.brief_description ?? "No study description provided";
                    dss = s.data_sharing_statement ?? "No statement provided";
                    if (s.study_start_year is not null)
                    {
                        if (s.study_start_month is not null)
                        {
                            start_date = get_month(s.study_start_month) + " " + s.study_start_year?.ToString();
                        }
                        else
                        {
                            start_date = s.study_start_year + "";
                        }
                    }
                    else
                    {
                        start_date = "not given";
                    }
                    type_name = s.study_type?.name ?? "not given";
                    status_name = s.study_status?.name ?? "not given";
                    gender_elig = s.study_gender_elig?.name ?? "not given";
                    if (s.min_age is not null)
                    {
                        if (s.min_age.value.HasValue)
                        {
                            min_age = ((int)s.min_age.value).ToString();
                            min_age += s.min_age.unit_name ?? "";
                        }
                    }
                    if (s.max_age is not null)
                    {
                        if (s.max_age.value.HasValue)
                        {
                            max_age = ((int)s.max_age.value).ToString();
                            max_age += s.max_age.unit_name ?? "";
                        }
                    }
                    enrolment = s.study_enrolment ?? "not given";

                    study_identifiers = s.study_identifiers;
                    study_titles = s.study_titles;
                    study_people = s.study_people;
                    study_organisations = s.study_organisations;
                    study_topics = s.study_topics;
                    study_features = s.study_features;
                    study_conditions = s.study_conditions;
                    study_icds = s.study_icds;
                    study_countries = s.study_countries;
                    study_locations = s.study_locations;
                    study_relationships = s.study_relationships;

                    provenance = s.provenance_string ?? "";   
                }
            }
        }
    }
}