<div class="filter-line-rev">
    <div>
    <Tooltip Text="Clear all" Position="top">
        <button class="filter-btn" @onclick="() => SetAllCheckboxes(false)">
            <img height="14" width="14"
                 src="/icons/delete-all-icon.svg"
                 alt="clear all icon" />
        </button>
    </Tooltip>
    </div>
    <div>
    <Tooltip Text="Select all" Position="top">
        <button class="filter-btn" @onclick="() => SetAllCheckboxes(true)">
            <img height="14" width="14"
                 src="/icons/double-tick-icon.svg"
                 alt="select all icon" />
        </button>
    </Tooltip>
    </div>
</div>

<div class="filter-line"><FluentCheckbox @bind-Value="v205">Randomised</FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="v210">Nonrandomised</FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="v200">Not&nbsp;applicable</FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="v215">Not&nbsp;provided</FluentCheckbox></div>

@code {

    string? feedbackBase = "Allocation type one of (";
    string? sqlBase = "alloc_id in (";

    [Parameter]
    public Action<string>? OnFeedbackChange { get; set; }

    [Parameter]
    public Action<string>? OnSQLChange { get; set; }


    bool _v205, _v210, _v200, _v215;
    string alloc_sql = "";
    string alloc_fback = "";

    public bool v205
    {
        get { return _v205; }
        set
        {
            _v205 = value;
            process_state();
        }
    }
    public bool v210
    {
        get { return _v210; }
        set
        {
            _v210 = value;
            process_state();
        }
    }
    public bool v200
    {
        get { return _v200; }
        set
        {
            _v200 = value;
            process_state();
        }

    }
    public bool v215
    {
        get { return _v215; }
        set
        {
            _v215 = value;
            process_state();
        }
    }
    
    private void process_state()
    {
        if (!_v205 && !_v210 && !_v200 && !_v215)
        {
            OnFeedbackChange!.Invoke("");
            OnSQLChange!.Invoke("");
        }
        else if (_v205 && _v210 && _v200 && _v215)
        {
            OnFeedbackChange!.Invoke("All allocation options");
            OnSQLChange!.Invoke("");
        }
        else
        {
            string alloc_fback_string = _v205 ? ", Randomised" : "";
            alloc_fback_string += _v210 ? ", Nonrandomised" : "";
            alloc_fback_string += _v200 ? ", Not applicable" : "";
            alloc_fback_string += _v215 ? ", Not provided" : "";
            alloc_fback = feedbackBase + alloc_fback_string[2..] + ")";
            OnFeedbackChange!.Invoke(alloc_fback);

            string alloc_sql_string = _v205 ? ", 205" : "";
            alloc_sql_string += _v210 ? ", 210" : "";
            alloc_sql_string += _v200 ? ", 200" : "";
            alloc_sql_string += _v215 ? ", 215" : "";
            alloc_sql = sqlBase + alloc_sql_string[2..] + ")";
            OnSQLChange!.Invoke(alloc_sql);
        }
    }

    private void SetAllCheckboxes(bool check_state)
    {
        v205 = check_state;
        v210 = check_state;
        v200 = check_state;
        v215 = check_state;
    }
}
