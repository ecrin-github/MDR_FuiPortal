<div class="filter-line-rev">
    <div>
        <Tooltip Text="Clear all" Position="top">
            <button class="filter-btn" @onclick="() => SetAllCheckboxes(false)">
                <img height="14" width="14"
                     src="/icons/delete-all-icon.svg"
                     alt="clear all icon" />
            </button>
        </Tooltip>
    </div>
    <div>
        <Tooltip Text="Select all" Position="top">
            <button class="filter-btn" @onclick="() => SetAllCheckboxes(true)">
                <img height="14" width="14"
                     src="/icons/double-tick-icon.svg"
                     alt="select all icon" />
            </button>
        </Tooltip>
    </div>
</div>
<div class="filter-line"><FluentCheckbox @bind-Value="s16">Not&nbsp;yet&nbsp;recruiting</FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="s14">Recruiting</FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="s15">Active,&nbsp;not&nbsp;recruiting</FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="s25">Ongoing* </FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="s21">Completed</FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="s11">Withdrawn</FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="s18">Suspended</FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="s22">Terminated</FluentCheckbox></div>
<div class="filter-line"><FluentCheckbox @bind-Value="s30">Other</FluentCheckbox></div>
<div class="filter-bottom-line">
    <p class="small-text-blue-italic">
        *Excludes 2 previous categories - selects studies described explicitly as 'Ongoing'
    </p>
</div>


@code {

    bool _s16, _s14, _s15, _s25, _s21, _s11, _s18, _s22, _s30;

    [Parameter]
    public Action<string>? OnFeedbackChange { get; set; }

    [Parameter]
    public Action<string>? OnSQLChange { get; set; }

    string status_sql = "";

    public bool s16
    {
        get { return _s16; }
        set
        {
            _s16 = value;
            process_state();
        }
    }
    public bool s14
    {
        get { return _s14; }
        set
        {
            _s14 = value;
            process_state();
        }
    }
    public bool s15
    {
        get { return _s15; }
        set
        {
            _s15 = value;
            process_state();
        }

    }
    public bool s25
    {
        get { return _s25; }
        set
        {
            _s25 = value;
            process_state();
        }

    }
    public bool s21
    {
        get { return _s21; }
        set
        {
            _s21 = value;
            process_state();
        }
    }
    public bool s11
    {
        get { return _s11; }
        set
        {
            _s11 = value;
            process_state();
        }
    }
    public bool s18
    {
        get { return _s18; }
        set
        {
            _s18 = value;
            process_state();
        }

    }
    public bool s22
    {
        get { return _s22; }
        set
        {
            _s22 = value;
            process_state();
        }
    }

    public bool s30
    {
        get { return _s30; }
        set
        {
            _s30 = value;
            process_state();
        }
    }

    private void process_state()
    {
        if (!_s16 && !_s14 && !_s15 && !_s25 && !_s21 
            && !_s11 && !_s18 && !_s22 && !_s30)
        {
            OnSQLChange!.Invoke("");
        }
        else if (_s16 && _s14 && _s15 && _s25 && _s21 
            && _s11 && _s18 && _s22 && _s30 )
        {
            OnSQLChange!.Invoke("");
        }
        else
        {
            string status_sql_string = "";
            status_sql_string += _s16 ? ", 16" : "";
            status_sql_string += _s14 ? ", 14" : "";
            status_sql_string += _s15 ? ", 15" : "";
            status_sql_string += _s25 ? ", 25" : "";
            status_sql_string += _s21 ? ", 21" : "";
            status_sql_string += _s11 ? ", 11" : "";
            status_sql_string += _s18 ? ", 18" : "";
            status_sql_string += _s22 ? ", 22" : "";
            status_sql_string += _s30 ? ", 30" : "";

            if (status_sql_string == "")
            {
                OnSQLChange!.Invoke("");
            }
            else
            {
                OnSQLChange!.Invoke("status_id in (" + status_sql_string[2..] + ")");
            }
        }
    }

    private void SetAllCheckboxes(bool check_state)
    {
        s16 = check_state;
        s14 = check_state; s15 = check_state;
        s25 = check_state; s21 = check_state;
        s11 = check_state; s18 = check_state;
        s22 = check_state; s30 = check_state;
    }

    public void ClearFilters()
    {
        _s16 = false;
        _s14 = false; _s15 = false;
        _s25 = false; _s21 = false;
        _s11 = false; _s18 = false;
        _s22 = false; _s30 = false;
        OnSQLChange!.Invoke("");
    }

    public void SetFilters(string AppliedFilters)
    {
        if (string.IsNullOrEmpty(AppliedFilters))
        {
            ClearFilters();
        }
        else
        {
            if (AppliedFilters.StartsWith("status_id in ("))  // it should!
            {
                string Filters = AppliedFilters[14..].Trim(')', ' ');
                string[] selected = Filters.Split(',', StringSplitOptions.TrimEntries);
                for (int i = 0; i < selected.Length; i++)
                {
                    switch (selected[i])
                    {
                        case ("16"): _s16 = true; break;
                        case ("14"): _s14 = true; break;
                        case ("15"): _s15 = true; break;
                        case ("25"): _s25 = true; break;
                        case ("21"): _s21 = true; break;
                        case ("11"): _s11 = true; break;
                        case ("18"): _s18 = true; break;
                        case ("22"): _s22 = true; break;
                        case ("30"): _s30 = true; break;
                    }
                }
            }
            process_state();
        }
    }
}
